if("undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports){var autobahn=require("autobahn");module.exports="vxWamp"}!function(){"use strict";function a(){var a;this.init=function(b){a=b||{}};var b=this.interceptors=[];return this.$get=["$rootScope","$q","$log","$injector",function(c,d,e,f){function g(b){return a.disable_digest&&a.disable_digest===!0?b:function(){var a=b.apply(this,arguments);return c.$apply(),a}}function h(){i.onopen=g(function(a,b){e.debug("Congrats!  You're connected to the WAMP server!"),c.$broadcast("$wamp.open",{session:a,details:b}),j.resolve()}),i.onclose=g(function(a,b){e.debug("Connection Closed: ",a,b);for(var d in i.session._call_reqs)if(i.session._call_reqs.hasOwnProperty(d)){var f=new Error("Connection Closed"),g=i.session._call_reqs[d];g[0].reject(f)}c.$broadcast("$wamp.close",{reason:a,details:b})})}var i,j=d.defer(),k=j.promise,l=function(a,b,e){var f=d.defer();return c.$broadcast("$wamp.onchallenge",{promise:f,session:a,method:b,extra:e}),f.promise},m=[];angular.forEach(b,function(a){m.unshift(angular.isString(a)?f.get(a):f.invoke(a))}),a=angular.extend({onchallenge:g(l),use_deferred:d.defer},a),i=new autobahn.Connection(a),h();var n=function(a,b,e,f){var h,j,k={},l=d.defer();return b=g(b),j=function(){var c=i.session.subscribe(a,b,e).then(function(a){return k.hasOwnProperty("id")&&delete k.id,k=angular.extend(a,k),l.resolve(k),a});f&&f(c)},i.isOpen&&j(),h=c.$on("$wamp.open",j),k.promise=l.promise,k.unsubscribe=function(){return h(),i.session.unsubscribe(k)},k.promise},o=function(a,b,c){var f=function(c){return{result:c,type:a,args:b}},g=function(c){return e.error("$wamp error",{type:a,arguments:b,error:c}),d.reject({error:c,type:a,args:b})},h=k.then(function(){return c()}),i=[f,g];for(angular.forEach(m,function(b){(b[a+"Response"]||b[a+"ResponseError"])&&i.push(b[a+"Response"],b[a+"ResponseError"])}),i.push(function(a){return a.result},function(a){return d.reject(a.error)});i.length;){var j=i.shift(),l=i.shift();h=h.then(j,l)}return h},p={open:function(){a.authmethods&&-1!==a.authmethods.indexOf("wampcra")&&!a.authid?e.debug("You're using WAMP CRA.  The authid must be set on $wamp before the connection can be opened, ie: $wamp.setAuthId('john.doe')"):i.open()},openNewConnection:function(b,c,e){i.isOpen&&i.close(),a=b,a=angular.extend({onchallenge:g(l),use_deferred:d.defer},a),e&&(i.onclose=null,i.onopen=null),i=new autobahn.Connection(a),h(),c&&p.open()},setAuthId:function(b,c){a.authid=b,c&&i.open()},close:function(){i.close()},subscribe:function(a,b,c,d){return o("subscribe",arguments,function(){return n(a,b,c,d)})},subscribeOnScope:function(a,b,c){return this.subscribe(b,c).then(function(b){a.$on("$destroy",function(){return b.unsubscribe()})})},unsubscribe:function(a){return o("unsubscribe",arguments,function(){return a.unsubscribe()})},publish:function(a,b,c,d){return o("publish",arguments,function(){return i.session.publish(a,b,c,d)})},register:function(a,b,c){return b=g(b),o("register",arguments,function(){return i.session.register(a,b,c)})},unregister:function(a){return o("unregister",arguments,function(){return a.unregister()})},call:function(a,b,c,d){return o("call",arguments,function(){return i.session.call(a,b,c,d)})}};return Object.defineProperty(p,"connection",{get:function(){return i}}),p}],this}angular.module("vxWamp",[]).provider("$wamp",a)}();